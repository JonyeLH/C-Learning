//#include <iostream>
//using namespace std;
//
////内联函数的作用：在主函数调用其他函数的过程中，将其他函数的代码复制到主函数调用的位置
////区别于普通函数调用的方式
////比常规函数稍快，但是需要的内存更多
////当函数体过大时，递归函数都不能调用内联函数
////内联函数定义一般写在头文件里
//
//
//#define SUM(x) x*x		//调用宏,功能是宏参数自乘
//
//inline void fun(int i)
//{
//	cout << (i*i) << endl;
//}
//
//class cstu
//{
//public:
//	void fun()		//没加上inline就是默认为隐式定义的内敛函数
//	{
//
//	}
//
//	//inline void fun()	//加了inline就是显示定义
//	//{
//
//	//}
//	void fun1();
//};
//
//inline void cstu::fun1()	//如果这里没有加inline，就不是内联函数
//{
//
//}
//
//int main()
//{
//	cout << (SUM(2 + 3));		//使用宏的输出的结果是：2+3*2+3=11   ((x)*(x))这个结果与内联函数是一样的
//
//	fun(2 + 3);					//内联函数结果的结果是：（2+3）*（2+3）=25
//
//	system("pause");
//	return 0;
//
//
//
//
//
//
//
////inline void fun(int i)			//内联函数的使用形式,是指在主函数的调用时，直接把函数内的代码复制到主函数调用的地方
//// {								//常规函数调用是，在主函数调用时，将所调用函数的结果直接返回				
////	
////	i+= 9;
////	cout << i << endl;
//// }
//
//
////int main()
////{
////	for (int i ; i < 10; i++);
////	{
////		int i;
////		fun(i);
////	}
////
////	system("pause");
////	return 0;
//}
//
// 